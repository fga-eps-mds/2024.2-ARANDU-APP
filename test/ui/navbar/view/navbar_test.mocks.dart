// Mocks generated by Mockito 5.4.4 from annotations
// in aranduapp/test/ui/navbar/view/navbar_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:ui' as _i4;

import 'package:aranduapp/core/state/command.dart' as _i2;
import 'package:aranduapp/ui/navbar/viewmodel/navbar_viewmodel.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCommand0_0<T> extends _i1.SmartFake implements _i2.Command0<T> {
  _FakeCommand0_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavbarViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavbarViewModel extends _i1.Mock implements _i3.NavbarViewModel {
  @override
  _i2.Command0<void> get navbarCommand => (super.noSuchMethod(
        Invocation.getter(#navbarCommand),
        returnValue: _FakeCommand0_0<void>(
          this,
          Invocation.getter(#navbarCommand),
        ),
        returnValueForMissingStub: _FakeCommand0_0<void>(
          this,
          Invocation.getter(#navbarCommand),
        ),
      ) as _i2.Command0<void>);

  @override
  set navbarCommand(_i2.Command0<void>? _navbarCommand) => super.noSuchMethod(
        Invocation.setter(
          #navbarCommand,
          _navbarCommand,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get selectedIndex => (super.noSuchMethod(
        Invocation.getter(#selectedIndex),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void changeTab(int? index) => super.noSuchMethod(
        Invocation.method(
          #changeTab,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
