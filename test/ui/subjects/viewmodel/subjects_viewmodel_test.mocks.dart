// Mocks generated by Mockito 5.4.4 from annotations
// in aranduapp/test/ui/subjects/viewmodel/subjects_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:aranduapp/ui/subjects/model/subject_model.dart' as _i4;
import 'package:aranduapp/ui/subjects/model/subject_request.dart' as _i5;
import 'package:aranduapp/ui/subjects/service/subjects_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SubjectService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubjectService extends _i1.Mock implements _i2.SubjectService {
  @override
  _i3.Future<List<_i4.SubjectModel>> getSubjects(
          _i5.SubjectRequest? SubjectRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSubjects,
          [SubjectRequest],
        ),
        returnValue:
            _i3.Future<List<_i4.SubjectModel>>.value(<_i4.SubjectModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.SubjectModel>>.value(<_i4.SubjectModel>[]),
      ) as _i3.Future<List<_i4.SubjectModel>>);

  @override
  _i3.Future<bool> isUsersubscribe(String? subjectId) => (super.noSuchMethod(
        Invocation.method(
          #isUsersubscribe,
          [subjectId],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
