// Mocks generated by Mockito 5.4.4 from annotations
// in aranduapp/test/ui/edit_password/view/edit_password_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:aranduapp/core/state/command.dart' as _i2;
import 'package:aranduapp/ui/edit_password/model/edit_password_request.dart'
    as _i5;
import 'package:aranduapp/ui/edit_password/viewmodel/edit_password_viewmodel.dart'
    as _i4;
import 'package:async/async.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCommand1_0<T, A> extends _i1.SmartFake
    implements _i2.Command1<T, A> {
  _FakeCommand1_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResult_1<T> extends _i1.SmartFake implements _i3.Result<T> {
  _FakeResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [EditPasswordViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockEditPasswordViewModel extends _i1.Mock
    implements _i4.EditPasswordViewModel {
  @override
  _i2.Command1<void, _i5.EditPasswordRequest> get editCommand =>
      (super.noSuchMethod(
        Invocation.getter(#editCommand),
        returnValue: _FakeCommand1_0<void, _i5.EditPasswordRequest>(
          this,
          Invocation.getter(#editCommand),
        ),
        returnValueForMissingStub:
            _FakeCommand1_0<void, _i5.EditPasswordRequest>(
          this,
          Invocation.getter(#editCommand),
        ),
      ) as _i2.Command1<void, _i5.EditPasswordRequest>);

  @override
  set editCommand(_i2.Command1<void, _i5.EditPasswordRequest>? _editCommand) =>
      super.noSuchMethod(
        Invocation.setter(
          #editCommand,
          _editCommand,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i6.Future<_i3.Result<void>> editPassword(_i5.EditPasswordRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #editPassword,
          [request],
        ),
        returnValue: _i6.Future<_i3.Result<void>>.value(_FakeResult_1<void>(
          this,
          Invocation.method(
            #editPassword,
            [request],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Result<void>>.value(_FakeResult_1<void>(
          this,
          Invocation.method(
            #editPassword,
            [request],
          ),
        )),
      ) as _i6.Future<_i3.Result<void>>);

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Command1].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommand1<T, A> extends _i1.Mock implements _i2.Command1<T, A> {
  @override
  _i6.Future<_i3.Result<T>> Function(A) get action => (super.noSuchMethod(
        Invocation.getter(#action),
        returnValue: (A __p0) =>
            _i6.Future<_i3.Result<T>>.value(_FakeResult_1<T>(
          this,
          Invocation.getter(#action),
        )),
        returnValueForMissingStub: (A __p0) =>
            _i6.Future<_i3.Result<T>>.value(_FakeResult_1<T>(
          this,
          Invocation.getter(#action),
        )),
      ) as _i6.Future<_i3.Result<T>> Function(A));

  @override
  bool get isError => (super.noSuchMethod(
        Invocation.getter(#isError),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isOk => (super.noSuchMethod(
        Invocation.getter(#isOk),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get running => (super.noSuchMethod(
        Invocation.getter(#running),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i6.Future<_i3.Result<T>> execute(A? arg1) => (super.noSuchMethod(
        Invocation.method(
          #execute,
          [arg1],
        ),
        returnValue: _i6.Future<_i3.Result<T>>.value(_FakeResult_1<T>(
          this,
          Invocation.method(
            #execute,
            [arg1],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Result<T>>.value(_FakeResult_1<T>(
          this,
          Invocation.method(
            #execute,
            [arg1],
          ),
        )),
      ) as _i6.Future<_i3.Result<T>>);

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
