// Mocks generated by Mockito 5.4.4 from annotations
// in aranduapp/test/ui/knowledge/view/knowledge_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i5;

import 'package:aranduapp/core/state/command.dart' as _i2;
import 'package:aranduapp/ui/knowledge/viewmodel/knowledge_viewmodel.dart'
    as _i4;
import 'package:async/async.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCommand1_0<T, A> extends _i1.SmartFake
    implements _i2.Command1<T, A> {
  _FakeCommand1_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResult_1<T> extends _i1.SmartFake implements _i3.Result<T> {
  _FakeResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [KnowledgeViewmodel].
///
/// See the documentation for Mockito's code generation for more information.
class MockKnowledgeViewmodel extends _i1.Mock
    implements _i4.KnowledgeViewmodel {
  @override
  List<Map<String, dynamic>> get knowledges => (super.noSuchMethod(
        Invocation.getter(#knowledges),
        returnValue: <Map<String, dynamic>>[],
        returnValueForMissingStub: <Map<String, dynamic>>[],
      ) as List<Map<String, dynamic>>);

  @override
  set knowledges(List<Map<String, dynamic>>? _knowledges) => super.noSuchMethod(
        Invocation.setter(
          #knowledges,
          _knowledges,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set erroMessage(String? _erroMessage) => super.noSuchMethod(
        Invocation.setter(
          #erroMessage,
          _erroMessage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Command1<List<Map<String, dynamic>>, Null> get fetchKnowledgesCommand =>
      (super.noSuchMethod(
        Invocation.getter(#fetchKnowledgesCommand),
        returnValue: _FakeCommand1_0<List<Map<String, dynamic>>, Null>(
          this,
          Invocation.getter(#fetchKnowledgesCommand),
        ),
        returnValueForMissingStub:
            _FakeCommand1_0<List<Map<String, dynamic>>, Null>(
          this,
          Invocation.getter(#fetchKnowledgesCommand),
        ),
      ) as _i2.Command1<List<Map<String, dynamic>>, Null>);

  @override
  set fetchKnowledgesCommand(
          _i2.Command1<List<Map<String, dynamic>>, Null>?
              _fetchKnowledgesCommand) =>
      super.noSuchMethod(
        Invocation.setter(
          #fetchKnowledgesCommand,
          _fetchKnowledgesCommand,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Command1].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommand1WithTypes extends _i1.Mock
    implements _i2.Command1<List<Map<String, dynamic>>, Null> {
  @override
  _i6.Future<_i3.Result<List<Map<String, dynamic>>>> Function(Null)
      get action => (super.noSuchMethod(
            Invocation.getter(#action),
            returnValue: (Null __p0) =>
                _i6.Future<_i3.Result<List<Map<String, dynamic>>>>.value(
                    _FakeResult_1<List<Map<String, dynamic>>>(
              this,
              Invocation.getter(#action),
            )),
            returnValueForMissingStub: (Null __p0) =>
                _i6.Future<_i3.Result<List<Map<String, dynamic>>>>.value(
                    _FakeResult_1<List<Map<String, dynamic>>>(
              this,
              Invocation.getter(#action),
            )),
          ) as _i6.Future<_i3.Result<List<Map<String, dynamic>>>> Function(
              Null));

  @override
  bool get isError => (super.noSuchMethod(
        Invocation.getter(#isError),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isOk => (super.noSuchMethod(
        Invocation.getter(#isOk),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get running => (super.noSuchMethod(
        Invocation.getter(#running),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i6.Future<_i3.Result<List<Map<String, dynamic>>>> execute(Null arg1) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [arg1],
        ),
        returnValue: _i6.Future<_i3.Result<List<Map<String, dynamic>>>>.value(
            _FakeResult_1<List<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #execute,
            [arg1],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Result<List<Map<String, dynamic>>>>.value(
                _FakeResult_1<List<Map<String, dynamic>>>(
          this,
          Invocation.method(
            #execute,
            [arg1],
          ),
        )),
      ) as _i6.Future<_i3.Result<List<Map<String, dynamic>>>>);

  @override
  void addListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i5.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
